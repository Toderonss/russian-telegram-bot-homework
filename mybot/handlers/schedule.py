# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
from telebot import types
from mybot.handlers.menu import show_main_menu
from mybot.config.schedule_config import EVEN_WEEK_SCHEDULE, ODD_WEEK_SCHEDULE
from datetime import datetime

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Ç–∏–ø–∞ –Ω–µ–¥–µ–ª–∏
current_week_is_even = datetime.now().isocalendar()[1] % 2 == 0

def register_handlers(bot):
    @bot.callback_query_handler(func=lambda call: call.data in ['schedule_ir3', 'schedule_common'])
    def schedule_handler(call):
        try:
            if call.data == 'schedule_ir3':
                # –ú–µ–Ω—é —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –ò—Ä3-23
                markup = types.InlineKeyboardMarkup(row_width=2)
                btn1 = types.InlineKeyboardButton('üîÑ –ó–∞–º–µ–Ω—ã', callback_data='schedule_ir3_changes')
                btn2 = types.InlineKeyboardButton('üìã –û—Å–Ω–æ–≤–Ω–æ–µ', callback_data='schedule_ir3_main')                
                btn_back = types.InlineKeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='menu')
                markup.add(btn1, btn2)
                markup.add(btn_back)
                text = "üìÜ –£–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π:"
            else:
                # –ú–µ–Ω—é —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è "–ë–µ–∑ –≥—Ä—É–ø–ø—ã"
                markup = types.InlineKeyboardMarkup(row_width=2)
                btn1 = types.InlineKeyboardButton('üè¢ 1 –∫–æ—Ä–ø—É—Å', callback_data='schedule_common_1')
                btn2 = types.InlineKeyboardButton('üè¢ 2 –∫–æ—Ä–ø—É—Å', callback_data='schedule_common_2')
                btn3 = types.InlineKeyboardButton('üè¢ 3 –∫–æ—Ä–ø—É—Å', callback_data='schedule_common_3')
                btn4 = types.InlineKeyboardButton('üè¢ 4 –∫–æ—Ä–ø—É—Å', callback_data='schedule_common_4')
                btn5 = types.InlineKeyboardButton('üè¢ 5 –∫–æ—Ä–ø—É—Å', callback_data='schedule_common_5')
                btn_back = types.InlineKeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='menu')
                markup.row(btn1, btn2)
                markup.row(btn3, btn4)
                markup.row(btn5)
                markup.row(btn_back)
                text = "üìÖ –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ—Ä–ø—É—Å:"

            bot.edit_message_text(
                text,
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                reply_markup=markup
            )
            bot.answer_callback_query(call.id)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤ schedule_handler: {e}")

    @bot.callback_query_handler(func=lambda call: call.data == 'schedule_ir3_changes')
    def show_changes_menu(call):
        try:
            markup = types.InlineKeyboardMarkup(row_width=2)
            btn1 = types.InlineKeyboardButton('üîó –ù–∞ —Å–µ–≥–æ–¥–Ω—è', url='https://site/today.htm')
            btn2 = types.InlineKeyboardButton('üîó –ù–∞ –∑–∞–≤—Ç—Ä–∞', url='https://site/tomorrow.htm')
            btn_back = types.InlineKeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='schedule_ir3')
            markup.add(btn1, btn2)
            markup.add(btn_back)
            
            bot.edit_message_text(
                "üîÑ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–º–µ–Ω –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏:",
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                reply_markup=markup
            )
            bot.answer_callback_query(call.id)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤ show_changes_menu: {e}")

    @bot.callback_query_handler(func=lambda call: call.data.startswith('schedule_common_'))
    def show_building_schedule(call):
        try:
            building = call.data.split('_')[-1]
            markup = types.InlineKeyboardMarkup(row_width=2)
            btn1 = types.InlineKeyboardButton('üîó –ù–∞ —Å–µ–≥–æ–¥–Ω—è', url=f'https://site/{building}korp/today.htm')
            btn2 = types.InlineKeyboardButton('üîó –ù–∞ –∑–∞–≤—Ç—Ä–∞', url=f'https://site/{building}korp/tomorrow.htm')
            btn_back = types.InlineKeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='schedule_common')
            markup.add(btn1, btn2)
            markup.add(btn_back)
            
            bot.edit_message_text(
                f"üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ {building} –∫–æ—Ä–ø—É—Å–∞:",
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                reply_markup=markup
            )
            bot.answer_callback_query(call.id)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤ show_building_schedule: {e}")

    
    @bot.callback_query_handler(func=lambda call: call.data == 'menu')
    def back_to_menu(call):
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ç–µ–∫—Å—Ç –∏ —Ä–∞–∑–º–µ—Ç–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è
            current_text = call.message.text
            current_markup = call.message.reply_markup
            
            # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ –º–µ–Ω—é —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–æ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ
            try:
                show_main_menu(bot, call)
            except Exception as e:
                if "message is not modified" not in str(e):
                    raise e
                else:
                    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback
                    bot.answer_callback_query(call.id)
                
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤ back_to_menu: {e}")

    @bot.callback_query_handler(func=lambda call: call.data == 'schedule_ir3_main')
    def show_schedule_days(call):
        try:
            global current_week_is_even
            current_weekday = datetime.now().weekday()
            weekday_mapping = {0: 'mon', 1: 'tue', 2: 'wed', 3: 'thu', 4: 'fri', 5: 'sat'}
            current_day = weekday_mapping.get(current_weekday, 'mon')
            
            schedule = EVEN_WEEK_SCHEDULE if current_week_is_even else ODD_WEEK_SCHEDULE
            
            days_ru = {
                'mon': '–ü–Ω', 'tue': '–í—Ç', 'wed': '–°—Ä',
                'thu': '–ß—Ç', 'fri': '–ü—Ç', 'sat': '–°–±'
            }
            
            markup = types.InlineKeyboardMarkup(row_width=6)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É, –≤—ã–¥–µ–ª—è—è —Ç–µ–∫—É—â–∏–π
            buttons = []
            for d_code, d_name in days_ru.items():
                if d_code == current_day:
                    btn_text = f"‚Ä¢ {d_name} ‚Ä¢"
                else:
                    btn_text = d_name
                buttons.append(types.InlineKeyboardButton(
                    btn_text, 
                    callback_data=f'schedule_day_{d_code}'
                ))
            markup.add(*buttons)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —á–µ—Ç–Ω–æ—Å—Ç–∏ –Ω–µ–¥–µ–ª–∏
            btn_even = types.InlineKeyboardButton(
                f"{'‚úì ' if current_week_is_even else ''}–ß–µ—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è", 
                callback_data='schedule_week_even'
            )
            btn_odd = types.InlineKeyboardButton(
                f"{'‚úì ' if not current_week_is_even else ''}–ù–µ—á–µ—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è", 
                callback_data='schedule_week_odd'
            )
            markup.row(btn_even, btn_odd)
            
            # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
            btn_back = types.InlineKeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='schedule_ir3')
            markup.row(btn_back)

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º
            week_type = "—á–µ—Ç–Ω–∞—è" if current_week_is_even else "–Ω–µ—á–µ—Ç–Ω–∞—è"
            text = f"üìÖ {days_ru[current_day]}, {week_type} –Ω–µ–¥–µ–ª—è:\n\n{schedule[current_day]}"

            bot.edit_message_text(
                text,
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                reply_markup=markup,
                parse_mode='HTML'
            )
            bot.answer_callback_query(call.id)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤ show_schedule_days: {e}")

    @bot.callback_query_handler(func=lambda call: call.data.startswith('schedule_week_'))
    def switch_week_schedule(call):
        try:
            global current_week_is_even
            current_week_is_even = call.data.endswith('even')
            schedule = EVEN_WEEK_SCHEDULE if current_week_is_even else ODD_WEEK_SCHEDULE
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è (–∏—â–µ–º –¥–≤—É—Ö–±—É–∫–≤–µ–Ω–Ω–æ–µ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ)
            current_text = call.message.text
            day_mapping = {
                '–ü–Ω': 'mon', '–í—Ç': 'tue', '–°—Ä': 'wed',
                '–ß—Ç': 'thu', '–ü—Ç': 'fri', '–°–±': 'sat'
            }
            
            # –ò—â–µ–º –¥–µ–Ω—å –≤ —Ç–µ–∫—Å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            current_day = 'mon'  # –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            for ru_day, eng_day in day_mapping.items():
                if ru_day in current_text:
                    current_day = eng_day
                    break
            
            days_ru = {
                'mon': '–ü–Ω', 'tue': '–í—Ç', 'wed': '–°—Ä',
                'thu': '–ß—Ç', 'fri': '–ü—Ç', 'sat': '–°–±'
            }
            
            markup = types.InlineKeyboardMarkup(row_width=6)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É, –≤—ã–¥–µ–ª—è—è —Ç–µ–∫—É—â–∏–π
            buttons = []
            for d_code, d_name in days_ru.items():
                if d_code == current_day:
                    btn_text = f"‚Ä¢ {d_name} ‚Ä¢"
                else:
                    btn_text = d_name
                buttons.append(types.InlineKeyboardButton(
                    btn_text, 
                    callback_data=f'schedule_day_{d_code}'
                ))
            markup.add(*buttons)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —á–µ—Ç–Ω–æ—Å—Ç–∏ –Ω–µ–¥–µ–ª–∏
            btn_even = types.InlineKeyboardButton(
                f"{'‚úì ' if current_week_is_even else ''}–ß–µ—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è", 
                callback_data='schedule_week_even'
            )
            btn_odd = types.InlineKeyboardButton(
                f"{'‚úì ' if not current_week_is_even else ''}–ù–µ—á–µ—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è", 
                callback_data='schedule_week_odd'
            )
            markup.row(btn_even, btn_odd)
            
            # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
            btn_back = types.InlineKeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='schedule_ir3')
            markup.row(btn_back)

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º
            week_type = "—á–µ—Ç–Ω–∞—è" if current_week_is_even else "–Ω–µ—á–µ—Ç–Ω–∞—è"
            text = f"üìÖ {days_ru[current_day]}, {week_type} –Ω–µ–¥–µ–ª—è:\n\n{schedule[current_day]}"

            bot.edit_message_text(
                text,
                chat_id=call.message.chat.id,
                message_id=call.message.message_id,
                reply_markup=markup,
                parse_mode='HTML'
            )
            bot.answer_callback_query(call.id)
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤ switch_week_schedule: {e}")

    @bot.callback_query_handler(func=lambda call: call.data.startswith('schedule_day_'))
    def show_day_schedule(call):
        try:
            global current_week_is_even
            day = call.data.split('_')[2]
            schedule = EVEN_WEEK_SCHEDULE if current_week_is_even else ODD_WEEK_SCHEDULE
            
            days_ru = {
                'mon': '–ü–Ω', 'tue': '–í—Ç', 'wed': '–°—Ä',
                'thu': '–ß—Ç', 'fri': '–ü—Ç', 'sat': '–°–±'
            }

            markup = types.InlineKeyboardMarkup(row_width=6)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É, –≤—ã–¥–µ–ª—è—è —Ç–µ–∫—É—â–∏–π
            buttons = []
            for d_code, d_name in days_ru.items():
                if d_code == day:
                    btn_text = f"‚Ä¢ {d_name} ‚Ä¢"
                else:
                    btn_text = d_name
                buttons.append(types.InlineKeyboardButton(
                    btn_text, 
                    callback_data=f'schedule_day_{d_code}'
                ))
            markup.add(*buttons)

            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —á–µ—Ç–Ω–æ—Å—Ç–∏ –Ω–µ–¥–µ–ª–∏
            btn_even = types.InlineKeyboardButton(
                f"{'‚úì ' if current_week_is_even else ''}–ß–µ—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è", 
                callback_data='schedule_week_even'
            )
            btn_odd = types.InlineKeyboardButton(
                f"{'‚úì ' if not current_week_is_even else ''}–ù–µ—á–µ—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è", 
                callback_data='schedule_week_odd'
            )
            markup.row(btn_even, btn_odd)

            # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
            btn_back = types.InlineKeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='schedule_ir3')
            markup.row(btn_back)

            week_type = "—á–µ—Ç–Ω–∞—è" if current_week_is_even else "–Ω–µ—á–µ—Ç–Ω–∞—è"
            new_text = f"üìÖ {days_ru[day]}, {week_type} –Ω–µ–¥–µ–ª—è:\n\n{schedule[day]}"

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
            if new_text != call.message.text:
                bot.edit_message_text(
                    new_text,
                    chat_id=call.message.chat.id,
                    message_id=call.message.message_id,
                    reply_markup=markup,
                    parse_mode='HTML'
                )
            else:
                # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è, –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ä–∞–∑–º–µ—Ç–∫—É
                bot.edit_message_reply_markup(
                    chat_id=call.message.chat.id,
                    message_id=call.message.message_id,
                    reply_markup=markup
                )
                
            bot.answer_callback_query(call.id)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤ show_day_schedule: {e}")

    